// code 

//{ Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template for C++

class Solution
{
  public:
    //Function to find the minimum indexed character.
    int minIndexChar(string str, string patt)
    {
        // Your code here
        unordered_map<char , int> s;
        
        for(int i = str.size()-1; i >=0; --i)
        {
            s[str[i]] = i;
        }
        
        int mini = INT_MAX;
        
        for(int i =0; i<patt.size(); ++i)
        {
            if(s.find(patt[i]) != s.end())
            {
                mini = min(mini , s[patt[i]]);
            }
        }
        
        if(mini != INT_MAX)
         return mini;
         
         return -1;
    }
    
   
};

//{ Driver Code Starts.

int main()
{
	int t;
    cin>>t;
    while(t--)
    {
        string str;
        string patt;
        cin>>str;
        cin>>patt;
        Solution obj;
        cout<<obj.minIndexChar(str, patt)<<endl;
    }
	return 0;
}

// } Driver Code Ends
