// CODE 

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

class Solution {
  public:
    int minSteps(int A[], int N, int K) {
        // code here
        
        sort(A, A+N);
        
        vector<int> prefix_sum(N+1,0);
        
        for(int i =1; i<=N; i++)
        {
            prefix_sum[i] = prefix_sum[i-1] + A[i-1];
        }
        
        int ans = INT_MAX;
        
        for(int i =0; i<N; i++)
        {
            if(prefix_sum[i] >=ans)
            return ans;
            
            int pos = upper_bound(A+i+1 , A+N, A[i] +K) -A;
            
            int actual_sum = prefix_sum[N] - prefix_sum[pos];
            
            int req_sum = (N-pos) * (A[i] + K);
            
            int min_del = actual_sum - req_sum + prefix_sum[i];
            
            ans = min(ans, min_del);
        }
        
        return ans;
    }
};


//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, K;
        cin>>N>>K;
        
        int A[N];
        for(int i=0; i<N; i++)
            cin>>A[i];

        Solution ob;
        cout << ob.minSteps(A,N,K) << endl;
    }
    return 0;
}
// } Driver Code Ends
