// code 

//{ Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution{
  public:
    /*You are required to complete this method */
    bool isInterleave(string A, string B, string C) 
    {
        //Your code here
        if(A.size() + B.size() != C.size())
          return false;
          
          vector<vector<int>> dp(A.size(), vector<int> (B.size(), -1));
          
          return fun(0,0,A,B,C,dp);
          
        
    }
    
    bool fun(int i , int j , string a,string b, string c , vector<vector<int>> &dp)
    {
        if(i == a.size())
        return b.substr(j) == c.substr(i+j);
        
        if(j == b.size())
          return a.substr(i) == c.substr(i+j);
          
          if(dp[i][j] != -1)
          return dp[i][j];
          
          bool x = false;
          bool y = false;
          
          if(a[i] == c[i+j])
          x = fun(i+1, j, a,b,c,dp);
          
          if(b[j] == c[i+j])
          y = fun(i, j+1,a,b,c,dp);
          
          return dp[i][j] = x||y;
    }

};

//{ Driver Code Starts.
int main() {
	int t;
	cin>>t;
	while(t--)
	{
		string a,b,c;
		cin>>a;
		cin>>b;
		cin>>c;
		Solution obj;
		cout<<obj.isInterleave(a,b,c)<<endl;
	}
	// your code goes here
	return 0;
}
// } Driver Code Ends
