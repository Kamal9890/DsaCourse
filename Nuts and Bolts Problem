// code 

//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;


// } Driver Code Ends
//User function template for C++
int priority(char ch)
{
    if(ch == '!')
    {
        return 1;
    }
    
    if(ch == '#')
    {
        return 2;
    }
    
    if(ch == '$')
    {
        return 3;
    }
    
    if(ch == '%')
    {
        return 4;
    }
    
    if(ch == '&')
    {
        return 5;
    }
    
    
    if(ch == '*')
    {
        return 6;
    }
    
    if(ch == '@')
    {
        return 7;
    }
    
    
    if(ch == '^')
    {
        return 8;
    }
    
    
    if(ch == '~')
    {
        return 9;
    }
    
    
    
}

class Solution{
public:	

  static bool cmp(char a , char b)
  {
      return priority(a) < priority(b);
  }

	void matchPairs(char nuts[], char bolts[], int n) {
	    // code here
	    sort(nuts,nuts+n , cmp);
	    sort(bolts,bolts+n, cmp);
	    
	    return;
	}

};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        char nuts[n], bolts[n];
        for (int i = 0; i < n; i++) {
            cin >> nuts[i];
        }
        for (int i = 0; i < n; i++) {
            cin >> bolts[i];
        }
        Solution ob;
        ob.matchPairs(nuts, bolts, n);
        for (int i = 0; i < n; i++) {
            cout << nuts[i] << " ";
        }
        cout << "\n";
        for (int i = 0; i < n; i++) {
            cout << bolts[i] << " ";
        }
        cout << "\n";
    }
    return 0;
}

// } Driver Code Ends
